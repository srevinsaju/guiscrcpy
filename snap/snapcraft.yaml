name: guiscrcpy
version: v4.11.0
summary: An opensource GUI for android screen mirroring
description: |
  A full fledged GUI integration for the award winning open source scrcpy, for 
  Android Screen mirroring
grade: stable 
confinement: strict 

base: core20

architectures:
- build-on: amd64

apps:
  scrcpy:
    command: usr/local/bin/scrcpy
    environment:
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/android:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:/var/lib/snapd/lib/gl"
      MESA_GLSL_CACHE_DIR: "$SNAP_USER_DATA"
      LIBGL_DRIVERS_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri"
      SCRCPY_SERVER_PATH: "$SNAP/usr/local/share/scrcpy/scrcpy-server"

  adb:  
    command: usr/bin/adb
    environment:
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/android/"

  guiscrcpy:
    command: bin/guiscrcpy
    environment: 
      PATH: $SNAP/lib:$SNAP/usr/lib:$SNAP/bin:$SNAP/usr/bin:$SNAP/usr/local/bin:$PATH
      GUISCRCPY_SCRCPY: "$SNAP/usr/local/bin/scrcpy"
      GUISCRCPY_ADB: "$SNAP/usr/bin/adb"
      SCRCPY_SERVER_PATH: "$SNAP/usr/local/share/scrcpy/scrcpy-server"
      GUISCRCPY_SNAP: "TRUE"
    command-chain: &command-chain-common
    - bin/debian-multiarch-triplet-provider-launch
    - bin/classic-launch
    - bin/guiscrcpy

parts:

  debian-multiarch-triplet-provider-launch:
    plugin: nil
    stage-snaps:
    - debian-multiarch-triplet-provider-launch

  classic-launch:
    plugin: nil
    stage-snaps:
    - classic-launch

  guiscrcpy:
    stage-snaps:
      - scrcpy
    stage-packages:
      - freeglut3
    after: [classic-launch, debian-multiarch-triplet-provider-launch]
    # See 'snapcraft plugins'
    build-packages:
      - python3-pip
    override-build: |
      python -m venv $SNAPCRAFT_PART_INSTALL
      source $SNAPCRAFT_PART_INSTALL/bin/activate
      pip install poetry
      python -m poetry install -E PySide2 --no-dev
      ls -al $SNAPCRAFT_PART_INSTALL
      find "${SNAPCRAFT_PART_INSTALL}" -type f -executable -print0 | xargs -0 \
                sed -i "1 s|^#\\!${SNAPCRAFT_PYTHON_VENV_INTERP_PATH}.*$|#\\!/usr/bin/env ${SNAPCRAFT_PYTHON_INTERPRETER}|"

      determine_link_target() {
        opts_state="$(set +o +x | grep xtrace)"
        interp_dir="$(dirname "${SNAPCRAFT_PYTHON_VENV_INTERP_PATH}")"
        # Determine python based on PATH, then resolve it, e.g:
        # (1) /home/ubuntu/.venv/snapcraft/bin/python3 -> /usr/bin/python3.8
        # (2) /usr/bin/python3 -> /usr/bin/python3.8
        # (3) /root/stage/python3 -> /root/stage/python3.8
        # (4) /root/parts/<part>/install/usr/bin/python3 -> /root/parts/<part>/install/usr/bin/python3.8
        python_path="$(which "${SNAPCRAFT_PYTHON_INTERPRETER}")"
        python_path="$(readlink -e "${python_path}")"
        for dir in "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_STAGE}"; do
        if  echo "${python_path}" | grep -q "${dir}"; then
          python_path="$(realpath --strip --relative-to="${interp_dir}" \\
                 "${python_path}")"
          break
        fi
        done
        echo "${python_path}"
        eval "${opts_state}"
      }
      python_path="$(determine_link_target)"
      ln -sf "${python_path}" "${SNAPCRAFT_PYTHON_VENV_INTERP_PATH}"

    plugin: python
    source: .
    stage: 
      - lib64/*

plugs:
  adb-support:
  desktop:
  desktop-legacy:
  x11:
  unity7:
  wayland:
  opengl:
  process-control:
  network-bind:
  network:
  adb:
    interface: content
    target: $SNAP/usr/bin

# some parts are inherited from https://github.com/sisco311/scrcpy-snap/blob/master/snap/snapcraft.yaml
# Thanks @sisco311 for the amazing snap!!    
